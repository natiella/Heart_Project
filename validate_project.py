# validate_project.py

import os
import pandas as pd
import sys

def check_file_exists(path, description):
    if os.path.exists(path):
        print(f"‚úÖ {description}: –Ω–∞–π–¥–µ–Ω")
        return True
    else:
        print(f"‚ùå {description}: –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
        return False

def validate_submission():
    path = "submission.csv"
    if not check_file_exists(path, "–§–∞–π–ª –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π (submission.csv)"):
        return False

    try:
        df = pd.read_csv(path)
        required_cols = {"id", "prediction"}
        if set(df.columns) != required_cols:
            print(f"‚ùå submission.csv: –æ–∂–∏–¥–∞–µ–º—ã–µ –∫–æ–ª–æ–Ω–∫–∏ {required_cols}, –ø–æ–ª—É—á–µ–Ω—ã {set(df.columns)}")
            return False
        if len(df) != 966:
            print(f"‚ùå submission.csv: –æ–∂–∏–¥–∞–ª–æ—Å—å 966 —Å—Ç—Ä–æ–∫, –ø–æ–ª—É—á–µ–Ω–æ {len(df)}")
            return False
        if not df["prediction"].isin([0, 1]).all():
            print("‚ùå submission.csv: –∫–æ–ª–æ–Ω–∫–∞ 'prediction' –¥–æ–ª–∂–Ω–∞ —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ 0 –∏ 1")
            return False
        print("‚úÖ submission.csv: –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ submission.csv: {e}")
        return False

def validate_structure():
    required_dirs = ["notebooks", "src", "models"]
    required_files = {
        "notebooks/Heart_Project.ipynb": "Jupyter Notebook —Å –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ–º",
        "src/__init__.py": "–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥—É–ª—è src",
        "src/preprocessor.py": "–ö–ª–∞—Å—Å DataPreprocessor",
        "src/predictor.py": "–ö–ª–∞—Å—Å HeartAttackPredictor",
        "app.py": "FastAPI-—Å–µ—Ä–≤–∏—Å",
        "predict.py": "CLI-—Å–∫—Ä–∏–ø—Ç",
        "README.md": "–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è",
        "base.txt": "–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏"
    }

    all_ok = True

    for d in required_dirs:
        if not os.path.isdir(d):
            print(f"‚ùå –ü–∞–ø–∫–∞ '{d}' –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
            all_ok = False
        else:
            print(f"‚úÖ –ü–∞–ø–∫–∞ '{d}' –Ω–∞–π–¥–µ–Ω–∞")

    for f, desc in required_files.items():
        if not check_file_exists(f, desc):
            all_ok = False

    # –ü—Ä–æ–≤–µ—Ä–∫–∞: –Ω–µ—Ç –ª–∏ –∫–æ–¥–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –≤ –Ω–æ—É—Ç–±—É–∫–µ (–∫–æ—Å–≤–µ–Ω–Ω–æ)
    notebook_path = "notebooks/Heart_Project.ipynb"
    if os.path.exists(notebook_path):
        with open(notebook_path, "r", encoding="utf-8") as f:
            content = f.read()
            if "class DataPreprocessor" in content or "class HeartAttackPredictor" in content:
                print("‚ö†Ô∏è  –í –Ω–æ—É—Ç–±—É–∫–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω –∫–æ–¥ –∫–ª–∞—Å—Å–æ–≤ ‚Äî –æ–Ω –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ src/")
                all_ok = False
            else:
                print("‚úÖ –ö–æ–¥ –∫–ª–∞—Å—Å–æ–≤ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ –Ω–æ—É—Ç–±—É–∫–µ")

    return all_ok

def main():
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞ –ø–æ –¢–ó...\n")

    ok1 = validate_structure()
    ok2 = validate_submission()

    print("\n" + "="*50)
    if ok1 and ok2:
        print("üéâ –ü—Ä–æ–µ–∫—Ç –ø—Ä–æ—à—ë–ª –≤—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏! –ì–æ—Ç–æ–≤ –∫ —Å–¥–∞—á–µ.")
        sys.exit(0)
    else:
        print("üö® –ù–∞–π–¥–µ–Ω—ã –æ—à–∏–±–∫–∏. –ò—Å–ø—Ä–∞–≤—å—Ç–µ –∏—Ö –ø–µ—Ä–µ–¥ —Å–¥–∞—á–µ–π.")
        sys.exit(1)

if __name__ == "__main__":
    main()